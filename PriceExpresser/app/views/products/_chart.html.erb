<div id="metrics">
</div>
<script type = "text/javascript">
function getMaxObjectValue(this_array, element) {
  var values = [];
  for (var i = 0; i < this_array.length; i++) {
      values.push(Math.ceil(parseFloat(this_array[i][""+element])));
  }
  values.sort(function(a,b){return a-b});
  return values[values.length-1];
}
function getMinObjectValue(this_array, element) {
  var values = [];
  for (var i = 0; i < this_array.length; i++) {
      values.push(Math.floor(parseFloat(this_array[i][""+element])));
  }
  values.sort(function(a,b){return a-b});
  return values[0];
}

$(document).ready(setTimeout( function() {

   var prices = [];
   var dates = [];

   $.each($('.prices'), function() {
      prices.push($(this).text());
   });
   $.each($('.dates'), function() {
      dates.push($(this).text());
   });

   var original = [];
   for (var i = 0; i < prices.length; i++) {
      var obj  = {};
      obj.price = parseFloat(String(prices[i]).substring(2).replace(',',''));
      obj.date = dates[i];
      original.push(obj);
   }

  var data = [];                  
  for (var i = 0; i < original.length; i++) {          
    var tmpObj  = {};
    tmpObj.price  = original[i].price;       
    tmpObj.date = new Date(Date.parse(original[i].date));
    data.push(tmpObj);       
  }

  var width = 600, height = 400;
  var margin = {top: 30, right: 30, bottom: 50, left: 70}, width = width - margin.left - margin.right, height = height - margin.top - margin.bottom;
  // these are graph size settings
  var minDate = (data[0].date);
  maxDate = data[data.length-1].date;
  minObjectValue = getMinObjectValue(data, 'price');
  maxObjectValue = getMaxObjectValue(data, 'price');
  //create the graph object
  var vis= d3.select("#metrics").append("svg")
      .data(data)
    .attr("class", "metrics-container")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
  var y = d3.scale.linear().domain([ minObjectValue - (.1 * minObjectValue) , maxObjectValue + (.1 * maxObjectValue) ]).range([height, 0]),
  x = d3.time.scale().domain([minDate, maxDate]).range([0, width]);
  // alert(minDate);
  var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(5);
  var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")
    .ticks(5);
  vis.append("g")
      .attr("class", "axis")
      .call(yAxis);
  vis.append("g")
    .attr("class", "axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
  //add the axes labels
  vis.append("text")
      .attr("class", "axis-label")
      .attr("text-anchor", "end")
      .attr("x", 20)
      .attr("y", height + 34)
      .text('Date');
  vis.append("text")
      .attr("class", "axis-label")
      .attr("text-anchor", "end")
      .attr("y", 6)
      .attr("dy", "-3.4em")
      .attr("transform", "rotate(-90)")
      .text('Price / $');
  var line = d3.svg.line()
    .x(function(d) { return x(d["date"]); })
    .y(function(d) { return y(d["price"]); })
  vis.append("svg:path")
    .attr("d", line(data))
    .style("stroke", function() { 
      return "#000000";
    })
    .style("fill", "none")
    .style("stroke-width", "2.5");
    var dataCirclesGroup = vis.append('svg:g');
    var circles = dataCirclesGroup.selectAll('.data-point')
      .data(data);
    circles
      .enter()
      .append('svg:circle')
      .attr('class', 'dot')
      .attr('fill', function() { return "red"; })
      .attr('cx', function(d) { return x(d["date"]); })
      .attr('cy', function(d) { return y(d["price"]); })
      .attr('r', function() { return 3; })
      .on("mouseover", function(d) {
          d3.select(this)
          .attr("r", 8)
          .attr("class", "dot-selected")
          .transition()
                .duration(750);
      })
      .on("mouseout", function(d) {
          d3.select(this)
          .attr("r", 3)
          .attr("class", "dot")
          .transition()
                .duration(750);
      });
},1000));


</script>
</body>
</html>